From 6fe72217f34afbe2967d4b43ff398a8d1936442f Mon Sep 17 00:00:00 2001
From: David Edmundson <davidedmundson@kde.org>
Date: Sun, 23 Jun 2019 14:48:30 +0200
Subject: [PATCH 03/23] Client: Make handleUpdate aware of exposure changes

The wl_surface can be destroyed whilst a render is happening. Calling
wl_surface::frame after the window is reset can crash as wl_surface is
null.

Fixes: QTBUG-77747
Change-Id: I139a9b234cb6acba81d6c1d5fa58629904a25053
Reviewed-by: Paul Olav Tvete <paul.tvete@qt.io>
(cherry picked from commit 5d43a686fc3d5f13087a61e8ef216ecbbae0d15e)

Conflicts:
	src/client/qwaylandwindow.cpp

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 src/client/qwaylandwindow.cpp | 10 +++++++++-
 src/client/qwaylandwindow_p.h |  4 ++++
 2 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/src/client/qwaylandwindow.cpp b/src/client/qwaylandwindow.cpp
index dc664304..9f4be6c3 100644
--- a/src/client/qwaylandwindow.cpp
+++ b/src/client/qwaylandwindow.cpp
@@ -219,6 +219,8 @@ void QWaylandWindow::initWindow()
 
 void QWaylandWindow::initializeWlSurface()
 {
+    Q_ASSERT(!isInitialized());
+    QWriteLocker lock(&mSurfaceLock);
     init(mDisplay->createSurface(static_cast<QtWayland::wl_surface *>(this)));
 }
 
@@ -247,8 +249,10 @@ void QWaylandWindow::reset()
     mShellSurface = 0;
     delete mSubSurfaceWindow;
     mSubSurfaceWindow = 0;
-    if (isInitialized())
+    if (isInitialized()) {
+        QWriteLocker lock(&mSurfaceLock);
         destroy();
+    }
 
     if (mFrameCallback) {
         wl_callback_destroy(mFrameCallback);
@@ -554,6 +558,10 @@ void QWaylandWindow::handleScreenRemoved(QScreen *qScreen)
 
 void QWaylandWindow::attach(QWaylandBuffer *buffer, int x, int y)
 {
+    QReadLocker lock(&mSurfaceLock);
+    if (!isInitialized())
+        return;
+
     if (mFrameCallback) {
         wl_callback_destroy(mFrameCallback);
         mFrameCallback = nullptr;
diff --git a/src/client/qwaylandwindow_p.h b/src/client/qwaylandwindow_p.h
index 88738199..41f8f185 100644
--- a/src/client/qwaylandwindow_p.h
+++ b/src/client/qwaylandwindow_p.h
@@ -53,6 +53,8 @@
 
 #include <QtCore/QWaitCondition>
 #include <QtCore/QMutex>
+#include <QtCore/QReadWriteLock>
+
 #include <QtGui/QIcon>
 #include <QtCore/QVariant>
 
@@ -276,6 +278,8 @@ private:
     static QMutex mFrameSyncMutex;
     static QWaylandWindow *mMouseGrab;
 
+    QReadWriteLock mSurfaceLock;
+
     friend class QWaylandSubSurface;
 };
 
-- 
2.20.1

