From d7098eea7bdf81a37b94a25423c523625a496774 Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Mon, 26 Jul 2021 18:20:40 +0800
Subject: [PATCH 08/19] qwaylandwindow: Disable input when blocked

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 src/client/qwaylandwindow.cpp | 42 ++++++++++++++++++++++++++++-------
 src/client/qwaylandwindow_p.h |  5 +++++
 2 files changed, 39 insertions(+), 8 deletions(-)

diff --git a/src/client/qwaylandwindow.cpp b/src/client/qwaylandwindow.cpp
index 1b48341b..8f8f90bf 100644
--- a/src/client/qwaylandwindow.cpp
+++ b/src/client/qwaylandwindow.cpp
@@ -81,6 +81,7 @@ QWaylandWindow::QWaylandWindow(QWindow *window)
     : QPlatformWindow(window)
     , mDisplay(waylandScreen()->display())
     , mResizeAfterSwap(qEnvironmentVariableIsSet("QT_WAYLAND_RESIZE_AFTER_SWAP"))
+    , mBlocked(false)
 {
     static WId id = 1;
     mWindowId = id++;
@@ -421,21 +422,17 @@ void QWaylandWindow::lower()
         mShellSurface->lower();
 }
 
-void QWaylandWindow::setMask(const QRegion &mask)
+void QWaylandWindow::updateInputRegion()
 {
-    if (mMask == mask)
-        return;
-
-    mMask = mask;
-
     QReadLocker locker(&mSurfaceLock);
     if (!isInitialized())
         return;
 
-    if (mMask.isEmpty()) {
+    if (!mBlocked && mMask.isEmpty()) {
         set_input_region(nullptr);
     } else {
-        struct ::wl_region *region = mDisplay->createRegion(mMask);
+        struct ::wl_region *region =
+            mDisplay->createRegion(mBlocked ? QRegion() : mMask);
         set_input_region(region);
         wl_region_destroy(region);
     }
@@ -443,6 +440,35 @@ void QWaylandWindow::setMask(const QRegion &mask)
     wl_surface::commit();
 }
 
+void QWaylandWindow::setMask(const QRegion &mask)
+{
+    if (mMask == mask)
+        return;
+
+    mMask = mask;
+
+    if (!mBlocked)
+        updateInputRegion();
+}
+
+bool QWaylandWindow::windowEvent(QEvent *event)
+{
+    switch (event->type()) {
+    case QEvent::WindowBlocked: // Blocked by another modal window.
+        mBlocked = true;
+        updateInputRegion();
+        break;
+    case QEvent::WindowUnblocked:
+        mBlocked = false;
+        updateInputRegion();
+        break;
+    default:
+        break;
+    }
+
+    return QPlatformWindow::windowEvent(event);
+}
+
 void QWaylandWindow::applyConfigureWhenPossible()
 {
     QMutexLocker resizeLocker(&mResizeLock);
diff --git a/src/client/qwaylandwindow_p.h b/src/client/qwaylandwindow_p.h
index b3aae072..e95b6b4a 100644
--- a/src/client/qwaylandwindow_p.h
+++ b/src/client/qwaylandwindow_p.h
@@ -145,6 +145,8 @@ public:
 
     void setMask(const QRegion &region) override;
 
+    bool windowEvent(QEvent *event) override;
+
     int scale() const;
     qreal devicePixelRatio() const override;
 
@@ -255,6 +257,9 @@ private:
     void handleMouseEventWithDecoration(QWaylandInputDevice *inputDevice, const QWaylandPointerEvent &e);
     void handleScreenChanged();
 
+    bool mBlocked;
+    void updateInputRegion();
+
     bool mUpdateRequested = false;
     QRect mLastExposeGeometry;
 
-- 
2.20.1

