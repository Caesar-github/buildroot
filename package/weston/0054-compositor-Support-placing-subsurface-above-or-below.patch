From 47a4a7e9612d30b6c589fd697fd5993222f458b4 Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Wed, 3 Nov 2021 17:52:51 +0800
Subject: [PATCH 54/54] compositor: Support placing subsurface above or below
 itself

By passing itself as sibling in ::place_above or ::place_below.

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 libweston/compositor.c | 33 +++++++++++++++++++++++++++++++--
 1 file changed, 31 insertions(+), 2 deletions(-)

diff --git a/libweston/compositor.c b/libweston/compositor.c
index 49a36f4..bd3a104 100644
--- a/libweston/compositor.c
+++ b/libweston/compositor.c
@@ -4447,6 +4447,27 @@ subsurface_sibling_check(struct weston_subsurface *sub,
 	return sibling;
 }
 
+static struct weston_subsurface *
+subsurface_get_sibling(struct weston_subsurface *sub, bool above)
+{
+	struct weston_surface *parent = sub->parent;
+	struct weston_subsurface *sibling, *prev = NULL;
+
+	wl_list_for_each(sibling, &parent->subsurface_list, parent_link) {
+		if (above) {
+			if (sibling == sub)
+				return prev;
+		} else {
+			if (prev == sub)
+				return sibling;
+		}
+
+		prev = sibling;
+	}
+
+	return NULL;
+}
+
 static void
 subsurface_place_above(struct wl_client *client,
 		       struct wl_resource *resource,
@@ -4460,7 +4481,11 @@ subsurface_place_above(struct wl_client *client,
 	if (!sub)
 		return;
 
-	sibling = subsurface_sibling_check(sub, surface, "place_above");
+	if (surface == sub->surface)
+		sibling = subsurface_get_sibling(sub, true);
+	else
+		sibling = subsurface_sibling_check(sub, surface, "place_above");
+
 	if (!sibling)
 		return;
 
@@ -4484,7 +4509,11 @@ subsurface_place_below(struct wl_client *client,
 	if (!sub)
 		return;
 
-	sibling = subsurface_sibling_check(sub, surface, "place_below");
+	if (surface == sub->surface)
+		sibling = subsurface_get_sibling(sub, false);
+	else
+		sibling = subsurface_sibling_check(sub, surface, "place_below");
+
 	if (!sibling)
 		return;
 
-- 
2.20.1

